



ohai                                                            T. Reddy
Internet-Draft                                                    Akamai
Intended status: Standards Track                                 D. Wing
Expires: October 15, 2022                                         Citrix
                                                            M. Boucadair
                                                                  Orange
                                                          April 13, 2022


                        Oblivious Proxy Feedback
                  draft-rdb-ohai-feedback-to-proxy-02

Abstract

   To provide equitable service to clients, servers often rate-limit
   incoming requests, for example based upon the source IP address.  However,
   oblivious HTTP removes the ability for the server to distinguish
   amongst clients so the server can only rate-limit traffic from the
   oblivious proxy.  This harms all clients behind that oblivious proxy.

   This specification provides feedback from a server to an oblivious
   proxy, enabling the oblivious proxy to rate-limit incoming requests
   from clients.  Cooperating oblivious proxies can thus provide more
   equitable service to their distinguishable clients without impacting
   on all clients behind that Oblivious proxy.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on October 15, 2022.








Reddy, et al.           Expires October 15, 2022                [Page 1]

Internet-Draft          Oblivious Proxy Feedback              April 2022


Copyright Notice

   Copyright (c) 2022 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  The "oblivous-target" Parameter . . . . . . . . . . . . . . .   4
   4.  "oblivous-target" Parameter Values  . . . . . . . . . . . . .   4
   5.  Request or Target Resource Generating Ohai-Proxy-Feedback
       Header  . . . . . . . . . . . . . . . . . . . . . . . . . . .   7
   6.  Proxy Processing of "oblivous-target" Parameter . . . . . . .   7
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   8
     8.1.  "oblivous-target" Parameter Value . . . . . . . . . . . .   8
   9.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   8
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .   8
     10.1.  Normative References . . . . . . . . . . . . . . . . . .   8
     10.2.  Informative References . . . . . . . . . . . . . . . . .   9
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  10

1.  Introduction

   Oblivious HTTP [I-D.ietf-ohai-ohttp] describes a method of
   encapsulation for binary HTTP messages [BINARY] using Hybrid Public
   Key Encryption (HPKE; [HPKE]).  This enables a deployment architecture that can
   separate the identity of a requester from the request.  This scheme
   requires that servers and intermediaries explicitly support it.
   The server
   is susceptible to the attacks described below, but it cannot 
   enact per-client mitigations,
   since it has only knowledge of the oblivious
   proxy.  Rate-limiting traffic from an oblivious proxy impacts all
   clients behind that proxy, whether they are compliant or not with
   the server rate-limiting policies.




Reddy, et al.           Expires October 15, 2022                [Page 2]

Internet-Draft          Oblivious Proxy Feedback              April 2022


   Attacks against the Request and Target Resources can be classified
   into three primary categories:

   1.  A client sends a malformed encapsulated request causing
       decryption failure or decryption overload failure on the
       oblivious request resource.  This causes the oblivious request
       resource to send an error status code back to the oblivious
       proxy.

   2.  A client sends an HTTP request that causes an HTTP error on
       the oblivious target resource.  This might be a malformed HTTP
       request, or request for a missing resource.,

   3.  HTTP flood: A botnet performing an HTTP flood attack against a
       victim's server.  Because each bot in a botnet makes seemingly
       legitimate network requests the traffic is not spoofed and may
       appear "normal" in origin.  This might be too many requests from
       a single client, too many requests from the clients behind the
       same oblivious proxy or too many requests from all clients on the
       Internet.

   This document defines how an overload indication is communicated to
   an oblivious proxy so that this proxy can rate limit transactions by
   overzealous or misbehaving clients, allowing the oblivious proxy to
   continue servicing well-behaved clients to that same oblivious target
   resource.

   "RateLimit Fields for HTTP" specification
   [I-D.ietf-httpapi-ratelimit-headers] allows servers to publish
   current service limits to clients, whereas this draft allows servers
   to publish current service limits to oblivious proxies.  The former
   specification allows clients to shape their request policy and avoid
   being throttled out, whereas this specification allows oblivious
   proxies to shape their request policy and avoid being throttled out.

2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119][RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   The terms 
   "Encapsulated request", "Encapsulated response",
   "Oblivious proxy resource", "Oblivious request resource",
   "Oblivious target resource" are to be interpreted as described
   in [I-D.ietf-ohai-ohttp].
   The terms "quota policy" and "RateLimit fields" 
   are to be interpreted as described in [I-D.ietf-httpapi-ratelimit-headers].
   This document makes use of terms from [RFC8941].






Reddy, et al.           Expires October 15, 2022                [Page 3]

Internet-Draft          Oblivious Proxy Feedback              April 2022


3.  The "oblivous-target" Quota Policy Parameter

   The "oblivous-target" parameter is defined for
   the RateLimit-Limit field.  It
   provides information from the oblivious request resource
   or oblivious target resource to the proxy. If 
   this parameter is present,
   the proxy MUST remove the RateLimit fields
   before sending the HTTP response containing
   the encapsulated response to the client.  If the RateLimit fields
   along with the "oblivous-target" parameter are generated by the
   request resource before removing the protection (including being
   unable to remove encapsulation for any reason)(Section 6.2 of
   [I-D.ietf-ohai-ohttp]), it will result in the RateLimit fields added
   in the status code being sent without protection in response to a
   POST request from a client.

   The overall processing of the "oblivous-target" parameter is as
   follows:

   o  The "oblivous-target" parameter MUST NOT appear more than once in
      the quota policy.

   o  Proxies MUST ignore any "oblivous-target" parameter, that does not
      conform to the syntax defined in this specification.  In
      particular, proxies MUST NOT attempt to fix malformed "oblivous-
      target" parameters or parameter values.

4.  "oblivous-target" Parameter Values

   The "oblivous-target" parameter has the following syntax:

   oblivous-target = sf-item

   where the associated bare-item (Section 3.3 of [RFC8941]) is to
   indicate whether the quota policy is applicable to all the clients that
   are serviced by the proxy or applicable only to a specific client
   and associated parameters are supported.

   The bare-item can have the following values:

   0x01:  This value indicates that RateLimit fields are applicable to
      all the clients that are serviced by the proxy.

   0x02:  This value indicates that RateLimit fields are applicable only
      to the offending client.  For example, this value is used if the
      client is attacking the server (e.g., the client is using an



Reddy, et al.           Expires October 15, 2022                [Page 4]

Internet-Draft          Oblivious Proxy Feedback              April 2022


      abnormal header that matches an attack pattern).  The oblivious
      proxy can potentially rate-limit clients that have a high ratio of
      malicious requests to legitimate requests.

   The associated parameter is defined below:

   attack-severity = sf-integer

   Note that sf-integer is defined in Section 3.3.1 of [RFC8941].

   The "attack-severity" parameter indicates the attack severity level.
   This attribute takes one of the values defined in Section 3.12.2 of
   [RFC7970].

   The following example illustrates the use of the new
   parameter.  An oblivious target resource receives a malformed message and
   uses the source IP address to identify
   the sender; moreover it identifies that it was an oblivious HTTP request
   decapsulated by the oblivious request resource. 
   The Oblivious target resource generates a 400 response and 
   adds the RateLimit fields
   along with the "oblivous-target" quota policy parameter. 
   The request resource:
   1. copies the RateLimit fields from the original response;
   2. removes them from the original response before encapsulating it;
   3. generates a single 200 encapsulated response for the oblivious proxy resource
      along with the copied RateLimit fields.























Reddy, et al.           Expires October 15, 2022                [Page 5]

Internet-Draft          Oblivious Proxy Feedback              April 2022


+----+              +----------+               +----------+          +-----------+
| C  |              | Proxy    |               | Request  |          | Target    |
|    |              | Resource |               | Resource |          | Resource  |
+-+--+              +----+-----+               +-----+----+          +------+----+
  |                      |                           |                      |
  | Encapsulated         |                           |                      |
  +--------------------->|                           |                      |
  |  Request             |                           |                      |
  |                      | Encapsulated              |                      |
  |                      +-------------------------->|                      |
  |                      |  Request                  |                      |
  |                      |                           | Request              | .---------.
  |                      |                           +--------------------->| | Identify|
  |                      |                           |                      +-+malformed|
  |                      |                           |                      | | request |
  |                      |                           |         400 response | '---------'
  |                      |                           |<---------------------+
  |                      |                           |                      |
  |                      | 200 response with         |                      |
  |                      | RateLimit-Limit           |                      |
  |                      | field and the             |                      |
  |                      | oblivous-target parameter |                      |
                         |<--------------------------+                      |
.---------------------.  |   Encapsulated 400        |                      |
| Process             |  |       response            |                      |
| oblivous-target     +--+                           |                      |
| and applies         |  |                           |                      |
| rate-limit for the  |  |                           |                      |
| offending client    |  |                           |                      |
'---------------------'  |                           |                      |
                         |                           |                      |
  |                      |                           |                      |
  | Encapsulated 400     |                           |                      |
  |<---------------------+                           |                      |
  |     response         |                           |                      |
  |                      |                           |                      |

            Figure 1: An Example of Ratelimit Feedback to Proxy

   The response constructed by the oblivious request resource is
   depicted below:










Reddy, et al.           Expires October 15, 2022                [Page 6]

Internet-Draft          Oblivious Proxy Feedback              April 2022


   =============== NOTE: '\' line wrapping per RFC 8792 ================

     HTTP/1.1 200 OK
     Date: Wed, 27 March 2022 04:45:07 GMT
     Cache-Control: private, no-store
     RateLimit-Limit: 10,10;oblivous-target=2;attack-severity=1;\
   comment="abnormal header matching a WAF rule"
     Content-Type: message/ohttp-res
     Content-Length: 38 <content is the encapsulated 400 response>

   The comment in the RateLimit-Limit field is informative (Section 4 of
   [I-D.ietf-httpapi-ratelimit-headers]) and provides a description of
   the attack.

5.  Request or Target Resource Generating oblivious-target

   When an oblivious request or target resource wants to communicate
   quota policy information to a client, it
   MAY add a RateLimit-Limit field with a "oblivous-target" quota policy parameter to
   request load adjustment.  For example, when an HTTP server identifies
   itself a high frequency or high volume anomalies in the traffic
   directed to the server it would include the "oblivous-target"
   parameter.  The RateLimit fields provides enough detail to the
   oblivious proxy to avoid being throttled out.

6.  Proxy Processing of "oblivous-target" Parameter

   When receiving RateLimit-Limit fields containing
   an "oblivous-target" quota policy parameter, the proxy can process the 
   RateLimit fields and take appropriate actions.  There is no mechanism for
   the proxy to indicate to the server that feedback information was
   processed or was ignored.  The proxy can honor the rate indicated by
   the request resource/resource target.  To that aim, the proxy may
   take appropriate additional actions such as (1) rate-limiting the
   requests from a client (2) rate-limit all the clients that are
   serviced by the proxy.

   If the proxy ignores the rate-limit information, there is a risk that
   the overload may still be encountered by the request and target
   resources.  More severe actions may be, then, taken at the server,
   e.g., block all the requests from this proxy for a given time
   duration.

7.  Security Considerations

   The security considerations for the Oblivious HTTP protocol are
   discussed in Section 8 of [I-D.ietf-ohai-ohttp].  The client needs to
   trust the proxy that it does not leak the client identity to the



Reddy, et al.           Expires October 15, 2022                [Page 7]

Internet-Draft          Oblivious Proxy Feedback              April 2022


   server.  The target and request resources SHOULD convey the
   RateLimit-Limit field and "oblivous-target" parameter to trusted
   oblivious proxy.  However, if this oblivious proxy is not trusted,
   security risks discussed below may arise:

   o  If oblivious proxy and clients attacking the server are managed by
      an attacker, the attacker can use the rate-limit information to
      identify the server has detected the attack and possibly change
      the attack strategy.

   o  The oblivious proxy can collude with the attacking clients and
      leak the rate-limit information to the clients.

   Security considerations specific to the RateLimit-Limit field are
   discussed in Section 6 of [I-D.ietf-httpapi-ratelimit-headers].

8.  IANA Considerations

8.1.  RateLimit Parameter Value Registrations

   This specification requests IANA to add the following
   parameters to the "Hypertext Transfer Protocol (HTTP) RateLimit
   Parameters" registry defined in [I-D.ietf-httpapi-ratelimit-headers].

   +=================+=================+================+===============+
   | Field Name      |Parameter Name   |Description     |Specification     |
   +=================+=================+================+==================+
   | RateLimit-Limit |oblivous-target  |ohttp ratelimit |Section 3 of      |
   |                 |                 |                |this document     |
   | RateLimit-Limit |attack-severity  |ohttp ratelimit |Section 3 of      |
   |                 |                 |                |this document     |
   +-----------------+-----------------+----------------+------------------+

9.  Acknowledgements

   Thanks to Lucas Pardue, Rich Salz, and Brandon Williams for the
   discussion and comments.

10.  References

10.1.  Normative References

   [BINARY]   Thomson, M. and C. A. Wood, "Binary Representation of HTTP
              Messages", draft-ietf-httpbis-binary-message-01 (work in
              progress), February 2022.

   [HPKE]     Barnes, R. L., Bhargavan, K., Lipp, B., and C. A. Wood,
              "Hybrid Public Key Encryption", draft-irtf-cfrg-hpke-12
              (work in progress), September 2021.




Reddy, et al.           Expires October 15, 2022                [Page 8]

Internet-Draft          Oblivious Proxy Feedback              April 2022


   [I-D.ietf-httpapi-ratelimit-headers]
              Polli, R. and A. M. Ruiz, "RateLimit Fields for HTTP",
              draft-ietf-httpapi-ratelimit-headers-03 (work in
              progress), March 2022.

   [I-D.ietf-ohai-ohttp]
              Thomson, M. and C. A. Wood, "Oblivious HTTP", draft-ietf-
              ohai-ohttp-01 (work in progress), February 2022.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC3864]  Klyne, G., Nottingham, M., and J. Mogul, "Registration
              Procedures for Message Header Fields", BCP 90, RFC 3864,
              DOI 10.17487/RFC3864, September 2004,
              <https://www.rfc-editor.org/info/rfc3864>.

   [RFC5226]  Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs", RFC 5226,
              DOI 10.17487/RFC5226, May 2008,
              <https://www.rfc-editor.org/info/rfc5226>.

   [RFC5234]  Crocker, D., Ed. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", STD 68, RFC 5234,
              DOI 10.17487/RFC5234, January 2008,
              <https://www.rfc-editor.org/info/rfc5234>.

   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
              Protocol (HTTP/1.1): Message Syntax and Routing",
              RFC 7230, DOI 10.17487/RFC7230, June 2014,
              <https://www.rfc-editor.org/info/rfc7230>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8941]  Nottingham, M. and P-H. Kamp, "Structured Field Values for
              HTTP", RFC 8941, DOI 10.17487/RFC8941, February 2021,
              <https://www.rfc-editor.org/info/rfc8941>.

10.2.  Informative References

   [I-D.ietf-httpbis-bcp56bis]
              Nottingham, M., "Building Protocols with HTTP", draft-
              ietf-httpbis-bcp56bis-15 (work in progress), August 2021.




Reddy, et al.           Expires October 15, 2022                [Page 9]

Internet-Draft          Oblivious Proxy Feedback              April 2022


   [RFC7970]  Danyliw, R., "The Incident Object Description Exchange
              Format Version 2", RFC 7970, DOI 10.17487/RFC7970,
              November 2016, <https://www.rfc-editor.org/info/rfc7970>.

Authors' Addresses

   Tirumaleswar Reddy
   Akamai
   Embassy Golf Link Business Park
   Bangalore, Karnataka  560071
   India

   Email: kondtir@gmail.com


   Dan Wing
   Citrix Systems, Inc.
   4988 Great America Pkwy
   Santa Clara, CA  95054
   USA

   Email: danwing@gmail.com


   Mohamed Boucadair
   Orange
   Rennes  35000
   France

   Email: mohamed.boucadair@orange.com





















Reddy, et al.           Expires October 15, 2022               [Page 10]
